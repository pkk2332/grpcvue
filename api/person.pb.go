// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/person.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type More struct {
	C                    int64    `protobuf:"varint,1,opt,name=c,proto3" json:"c,omitempty"`
	D                    int64    `protobuf:"varint,2,opt,name=d,proto3" json:"d,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *More) Reset()         { *m = More{} }
func (m *More) String() string { return proto.CompactTextString(m) }
func (*More) ProtoMessage()    {}
func (*More) Descriptor() ([]byte, []int) {
	return fileDescriptor_691029fcf881525d, []int{0}
}

func (m *More) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_More.Unmarshal(m, b)
}
func (m *More) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_More.Marshal(b, m, deterministic)
}
func (m *More) XXX_Merge(src proto.Message) {
	xxx_messageInfo_More.Merge(m, src)
}
func (m *More) XXX_Size() int {
	return xxx_messageInfo_More.Size(m)
}
func (m *More) XXX_DiscardUnknown() {
	xxx_messageInfo_More.DiscardUnknown(m)
}

var xxx_messageInfo_More proto.InternalMessageInfo

func (m *More) GetC() int64 {
	if m != nil {
		return m.C
	}
	return 0
}

func (m *More) GetD() int64 {
	if m != nil {
		return m.D
	}
	return 0
}

type Request struct {
	A                    int64    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_691029fcf881525d, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Request) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type Response struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_691029fcf881525d, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type Info struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_691029fcf881525d, []int{3}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Info) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type InfoResponse struct {
	Infos                []*Info  `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_691029fcf881525d, []int{4}
}

func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (m *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(m, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetInfos() []*Info {
	if m != nil {
		return m.Infos
	}
	return nil
}

func init() {
	proto.RegisterType((*More)(nil), "api.More")
	proto.RegisterType((*Request)(nil), "api.Request")
	proto.RegisterType((*Response)(nil), "api.Response")
	proto.RegisterType((*Info)(nil), "api.Info")
	proto.RegisterType((*InfoResponse)(nil), "api.InfoResponse")
}

func init() { proto.RegisterFile("api/person.proto", fileDescriptor_691029fcf881525d) }

var fileDescriptor_691029fcf881525d = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x89, 0x6d, 0xe7, 0x7a, 0xac, 0x30, 0x83, 0x48, 0xf1, 0xc6, 0x19, 0x50, 0x06, 0x42,
	0x37, 0xe6, 0x13, 0xec, 0xd2, 0x8b, 0xdd, 0xc4, 0x27, 0x48, 0x9b, 0xa3, 0x04, 0x6a, 0x13, 0x93,
	0xd4, 0x67, 0xf2, 0x31, 0x25, 0x69, 0xe6, 0xd0, 0x8b, 0xdd, 0xe5, 0xcb, 0xf9, 0xf8, 0xf9, 0x93,
	0x03, 0x0b, 0x61, 0xd4, 0xda, 0xa0, 0x75, 0x7a, 0x68, 0x8c, 0xd5, 0x5e, 0xd3, 0x4c, 0x18, 0xc5,
	0x18, 0xe4, 0x7b, 0x6d, 0x91, 0x56, 0x40, 0xba, 0x9a, 0x2c, 0xc9, 0x2a, 0xe3, 0xa4, 0x0b, 0x24,
	0xeb, 0xb3, 0x89, 0x24, 0x7b, 0x80, 0x73, 0x8e, 0x9f, 0x23, 0x3a, 0x1f, 0x06, 0xe2, 0xa0, 0x89,
	0x40, 0xed, 0x41, 0x6b, 0x19, 0x83, 0x39, 0x47, 0x67, 0xf4, 0xe0, 0x90, 0xde, 0xc0, 0xcc, 0xa2,
	0x1b, 0x7b, 0x9f, 0xe4, 0x44, 0xac, 0x81, 0xfc, 0x65, 0x78, 0xd3, 0xf4, 0x1a, 0x0a, 0xaf, 0x7c,
	0x8f, 0x71, 0x5c, 0xf2, 0x09, 0xe8, 0x02, 0xb2, 0x0f, 0xf7, 0x1e, 0x13, 0x4b, 0x1e, 0x8e, 0x6c,
	0x0d, 0x55, 0xf0, 0x7f, 0x73, 0xef, 0xa0, 0x08, 0xec, 0x6a, 0xb2, 0xcc, 0x56, 0x17, 0xdb, 0xb2,
	0x11, 0x46, 0x35, 0xd1, 0x98, 0xee, 0xb7, 0xdf, 0x04, 0x60, 0x27, 0xe5, 0x2b, 0xda, 0x2f, 0xd5,
	0x21, 0x65, 0x90, 0xed, 0xa4, 0xa4, 0x55, 0xf4, 0xd2, 0x23, 0x6e, 0x2f, 0x13, 0xa5, 0xcc, 0x47,
	0x28, 0xf6, 0x63, 0xef, 0xd5, 0x49, 0x6b, 0x43, 0xe8, 0x3d, 0xe4, 0x3e, 0xfe, 0xc1, 0x1f, 0xed,
	0x58, 0x61, 0x43, 0xe8, 0x13, 0xcc, 0x83, 0x22, 0x85, 0x17, 0xff, 0xb4, 0xab, 0x63, 0xd3, 0x94,
	0xd8, 0xce, 0xe2, 0x1a, 0x9e, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x48, 0x8a, 0x54, 0x9a,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AddServiceClient is the client API for AddService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddServiceClient interface {
	Add(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Multi(ctx context.Context, in *Request, opts ...grpc.CallOption) (AddService_MultiClient, error)
	Test(ctx context.Context, in *Request, opts ...grpc.CallOption) (AddService_TestClient, error)
	Testdata(ctx context.Context, in *Request, opts ...grpc.CallOption) (*InfoResponse, error)
}

type addServiceClient struct {
	cc *grpc.ClientConn
}

func NewAddServiceClient(cc *grpc.ClientConn) AddServiceClient {
	return &addServiceClient{cc}
}

func (c *addServiceClient) Add(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.AddService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addServiceClient) Multi(ctx context.Context, in *Request, opts ...grpc.CallOption) (AddService_MultiClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AddService_serviceDesc.Streams[0], "/api.AddService/Multi", opts...)
	if err != nil {
		return nil, err
	}
	x := &addServiceMultiClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AddService_MultiClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type addServiceMultiClient struct {
	grpc.ClientStream
}

func (x *addServiceMultiClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *addServiceClient) Test(ctx context.Context, in *Request, opts ...grpc.CallOption) (AddService_TestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AddService_serviceDesc.Streams[1], "/api.AddService/test", opts...)
	if err != nil {
		return nil, err
	}
	x := &addServiceTestClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AddService_TestClient interface {
	Recv() (*Info, error)
	grpc.ClientStream
}

type addServiceTestClient struct {
	grpc.ClientStream
}

func (x *addServiceTestClient) Recv() (*Info, error) {
	m := new(Info)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *addServiceClient) Testdata(ctx context.Context, in *Request, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/api.AddService/testdata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddServiceServer is the server API for AddService service.
type AddServiceServer interface {
	Add(context.Context, *Request) (*Response, error)
	Multi(*Request, AddService_MultiServer) error
	Test(*Request, AddService_TestServer) error
	Testdata(context.Context, *Request) (*InfoResponse, error)
}

// UnimplementedAddServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAddServiceServer struct {
}

func (*UnimplementedAddServiceServer) Add(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedAddServiceServer) Multi(req *Request, srv AddService_MultiServer) error {
	return status.Errorf(codes.Unimplemented, "method Multi not implemented")
}
func (*UnimplementedAddServiceServer) Test(req *Request, srv AddService_TestServer) error {
	return status.Errorf(codes.Unimplemented, "method Test not implemented")
}
func (*UnimplementedAddServiceServer) Testdata(ctx context.Context, req *Request) (*InfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Testdata not implemented")
}

func RegisterAddServiceServer(s *grpc.Server, srv AddServiceServer) {
	s.RegisterService(&_AddService_serviceDesc, srv)
}

func _AddService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AddService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).Add(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddService_Multi_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AddServiceServer).Multi(m, &addServiceMultiServer{stream})
}

type AddService_MultiServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type addServiceMultiServer struct {
	grpc.ServerStream
}

func (x *addServiceMultiServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func _AddService_Test_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AddServiceServer).Test(m, &addServiceTestServer{stream})
}

type AddService_TestServer interface {
	Send(*Info) error
	grpc.ServerStream
}

type addServiceTestServer struct {
	grpc.ServerStream
}

func (x *addServiceTestServer) Send(m *Info) error {
	return x.ServerStream.SendMsg(m)
}

func _AddService_Testdata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServiceServer).Testdata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AddService/Testdata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServiceServer).Testdata(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.AddService",
	HandlerType: (*AddServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _AddService_Add_Handler,
		},
		{
			MethodName: "testdata",
			Handler:    _AddService_Testdata_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Multi",
			Handler:       _AddService_Multi_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "test",
			Handler:       _AddService_Test_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/person.proto",
}
